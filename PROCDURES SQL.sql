
--PROCEDURE INSTER_PERSON IS USED FOR INSERTING A NEW PERSON INTO THE TABLE PERSON
GO  
--THIS IF BLOCK IS USED FOR DELTING AND RE RECREATING PRODCURUE FOR MODIFCATION
IF EXISTS (SELECT 1 FROM SYS.OBJECTS WHERE NAME = 'INSERT_PERSON')
BEGIN
DROP PROCEDURE INSERT_PERSON
END
GO
--THESE @ ARE USED IN THE JAVA SCRIPT FOR IDENTIFITY VARIBLES
CREATE PROCEDURE INSERT_PERSON 
 @LNAME VARCHAR(50)
,@FNAME VARCHAR(50)
,@LOGIN_NAME VARCHAR(25)
,@H_PASS VARCHAR(50)
--SETS NO COUNT SO EXCECUTRE DOSENT RETURN ROW AFFECTED VAR
AS   

    SET NOCOUNT ON;  
--INSERTS PERSON TO THE FOLLOWING VARIBLES BASED ON THE @VARIBLES PASSED FROM THE JAVA SCRIPT
INSERT PERSON
(
LNAME
,FNAME
,LOGIN_NAME
,H_PASS
)
SELECT 
 @LNAME
,@FNAME
,@LOGIN_NAME
,@H_PASS


GO 
--PROCUDURE INSET APPOINTMENT FOR INSERTING CALANDER APPOINTMENTS/EVENTS INTO APPT TABLE
--IF BLOCK IS USED FOR MODIFCATION OF PROCEDURE
IF EXISTS (SELECT 1 FROM SYS.OBJECTS WHERE NAME = 'INSERT_APPT')
BEGIN
DROP PROCEDURE INSERT_APPT
END
GO
--BEGNING OF CREATE PRODCURE INSERT APPT
CREATE PROCEDURE INSERT_APPT
--@VARIBLES USED FOR JAVA REFRENCE
 @PERSON_ID INT
,@EVENTNAME VARCHAR(45)
,@REASON VARCHAR(250)
--THESE DATETIME2 DESERVE A SPECIAL NOTICE AS THEY ARE PASSED AS A STRING TO SQL BUT SQL IMPLICITLY TRANSLATES THEM TO THE CORRECT DATA TYPE
,@START_TIME DATETIME2
,@END_TIME DATETIME2
,@COLOR VARCHAR(15)
AS   
--SETS NO COUNT SO EXCECUTRE DOSENT RETURN ROW AFFECTED VAR
    SET NOCOUNT ON;  
INSERT APPT
(
--COLUMS TO INSERT DATA INTO
PERSONID 
,EVENTNAME 
,REASON 
,START_TIME 
,END_TIME 
,COLOR 
)
SELECT 
--SELECT DATA FROM PASSED JAVA VARIBLES AND INSERT INTO CORRECT COLUMS
@PERSON_ID
,@EVENTNAME
,@REASON
,@START_TIME
,@END_TIME
,@COLOR

GO 


--IF STATEMENT IS USED FOR MODIFCATION OF READ APPOINTMENTS
IF EXISTS (SELECT 1 FROM SYS.OBJECTS WHERE NAME = 'READ_APPTS')
BEGIN
DROP PROCEDURE READ_APPTS
END
GO
--BEGNING OF CREATE APPOINTMENTS PROCDURE
CREATE PROCEDURE READ_APPTS 
--ONLY ONE VARIBLE IS PASSED FROM PERSON JAVA FOR REFRENCE
@PERSONID INT
AS   
--SETS NO COUNT SO EXCECUTRE DOSENT RETURN ROW AFFECTED VAR
    SET NOCOUNT ON;  
SELECT 
--ONLY THING SPECIAL HERE IS THE CONVERT TIME BASED ON THE HUNDREDS OF DIFFRENT TIME FORMATS SQL HAS
A.EVENTNAME, A.REASON, CONVERT(VARCHAR, A.START_TIME, 100) AS START_TIME, CONVERT(VARCHAR, A.END_TIME, 100) AS END_TIME, A.COLOR
--NTO #TEMP
--FROM TABLE PERSON
FROM PERSON P
--JOIN THE TABLE APPT
	JOIN APPT A
	--WHEN THE PERSON ID = THE PERSON ID IN APPT TABLE 
		ON P.PERSONID = A.PERSONID
WHERE A.PERSONID = @PERSONID


GO


----IF STATEMENT IS USED FOR MODIFCATION OF READ APPOINTMENTS
IF EXISTS (SELECT 1 FROM SYS.OBJECTS WHERE NAME = 'GET_PERSON_ID')
BEGIN
DROP PROCEDURE GET_PERSON_ID
END
GO
--BEGINIGN OF GET PERSON ID PROCDURE
CREATE PROCEDURE GET_PERSON_ID 
--JAVA PASSES LOGIN NAME AT @REFRENCE
@LOGIN_NAME VARCHAR(25)
AS   
--SETS NO COUNT SO EXCECUTRE DOSENT RETURN ROW AFFECTED VAR
    SET NOCOUNT ON;  
--PERSON ID IS GATHERED FROM USER NAME PASSED BY JAVA THAT EQUALS A USERNAME IN THE SQL TABLE PERSON WHERE LOGIN NAMES ARE EQUAL
SELECT PERSONID
FROM PERSON
WHERE LOGIN_NAME = @LOGIN_NAME


GO

--TEST ECUTION BLOCK
EXEC GET_PERSON_ID 'kj7935'





